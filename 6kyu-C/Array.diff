/*
Your goal in this kata is to implement a difference function, which subtracts one list from another and returns the result.

It should remove all values from list a, which are present in list b keeping their order.

array_diff({1, 2}, 2, {1}, 1, *z) == {2} (z == 1)
If a value is present in b, all of its occurrences must be removed from the other:

array_diff({1, 2, 2, 2, 3}, 5, {2}, 1, *z) == {1, 3} (z == 2)
NOTE: In C, assign return array length to pointer *z
*/
#include <stdlib.h>

//  return a dynamically allocated array
//  assign the length of this array to *z
//  memory will be freed by the test suite

int *array_diff(const int *arr1, size_t n1, const int *arr2, size_t n2, size_t *z) {

  int q = 0, l = 0, m = 1;
  int *arr = NULL;
  for (int i = 0; i < (int)n1; i++) {
    for (int j = 0; j < (int)n2; j++) {
      if (arr1[i] == arr2[j]) {
        q++;
      }
    }
    if (q == 0) {
      arr = realloc(arr, m * sizeof(int));
      arr[l] = arr1[i];
      m++;
      l++;
    }
    q = 0;
  }
  *z = l;
  return arr;

}
